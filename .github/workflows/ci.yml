name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13', '3.x']
        simd: [ AVX2, SSE2, NONE ]
        exclude:
          - os: windows-latest
            simd: NONE
          - os: windows-latest
            simd: SSE2
          - os: macos-latest
            simd: NONE
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for setuptools-scm
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set compiler flags
        env:
          OPT_FLAGS_LINUX: -O3
          OPT_FLAGS_MACOS: -O3
          OPT_FLAGS_WINDOWS: /O2
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            FLAGS="${{ env.OPT_FLAGS_WINDOWS }}"
          elif [ "${{ runner.os }}" = "macOS" ]; then
            FLAGS="${{ env.OPT_FLAGS_MACOS }}"
          else
            FLAGS="${{ env.OPT_FLAGS_LINUX }}"
          fi

          if [ "${{ runner.os }}" != "Windows" ]; then
            if [ "${{ matrix.simd }}" = "AVX2" ]; then
              FLAGS="$FLAGS -mavx2"
            elif [ "${{ matrix.simd }}" = "SSE2" ]; then
              FLAGS="$FLAGS -msse2"
            elif [ "${{ matrix.simd }}" = "NONE" ]; then
              FLAGS="$FLAGS -mno-avx2 -mno-sse2"
            fi
          fi

          echo "CXXFLAGS=$FLAGS" >> $GITHUB_ENV
        shell: bash
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test]
      - name: Run tests
        run: pytest
